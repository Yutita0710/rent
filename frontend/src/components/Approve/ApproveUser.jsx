import { useEffect, useState, useContext } from "react";
import { Container, Card, Table, Button, Form, Modal, OverlayTrigger, Tooltip, Row, Col } from "react-bootstrap";
import Navbar from "../Navbar/Navbar";
import axios from "axios";
import { AuthContext } from "../../context/authContext";
import Swal from "sweetalert2";

function CancelHistory() {
  const [canceledList, setCanceledList] = useState([]);
  const { user, token } = useContext(AuthContext); // ‚úÖ ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏ô‡∏µ‡πâ
  const [searchTerm, setSearchTerm] = useState("");
  const [currentPage, setCurrentPage] = useState(1);
  const itemsPerPage = 10;

  useEffect(() => {
    if (!user || !token) return; // ‚úÖ ‡∏£‡∏≠‡πÉ‡∏´‡πâ user/token ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Å‡πà‡∏≠‡∏ô
  
    axios
      .get("http://localhost:3001/listmembers/0", {
        headers: {
          Authorization: token, // ‚úÖ ‡∏™‡πà‡∏á token ‡πÑ‡∏õ‡∏Å‡∏±‡∏ö header
        },
      })
      .then((res) => {
        setCanceledList(res.data);
      })
      .catch((err) => {
        console.error("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:", err);
        Swal.fire({
          icon: "error",
          title: "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ",
          text: err.response?.data?.message || "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î",
        });
      });
  }, [user, token]);

    const filteredList = canceledList.filter((item) => {
      const fullName =
        item.full_name && item.full_name.trim() !== ""
          ? item.full_name
          : `${item.frist_name || ""} ${item.last_name || ""}`.trim();
    
      const searchLower = searchTerm.toLowerCase();
    
      return (
        fullName.toLowerCase().includes(searchLower) ||
        item.team?.toLowerCase().includes(searchLower) ||
        item.product_name?.toLowerCase().includes(searchLower)
      );
    });

  const totalPages = Math.ceil(filteredList.length / itemsPerPage);
  const paginatedList = filteredList.slice(
    (currentPage - 1) * itemsPerPage,
    currentPage * itemsPerPage
  );
  console.log("paginatedList", canceledList);
  const formatDDate = (dateStr) => {
    const date = new Date(dateStr);
    const day = String(date.getDate()).padStart(2, '0');
    const month = String(date.getMonth() + 1).padStart(2, '0');
    const year = date.getFullYear() + 543;
  
    return `${day}/${month}/${year}`;
  };
  const handleApprove = (data) => {
    Swal.fire({
      icon: "question",
      title: "‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï",
      html: `
        <div className="row d-flex align-items-center justify-content-center">
          <div className="col-12 d-flex align-items-center justify-content-center">
            <label for="teamSelect">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ó‡∏µ‡∏°</label>
            <select id="teamSelect" class="swal2-select" style="padding: 8px;border-radius: 5px;">
              <option value="">-- ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ó‡∏µ‡∏° --</option>
              <option value="A">‡∏ó‡∏µ‡∏° A</option>
              <option value="B">‡∏ó‡∏µ‡∏° B</option>
              <option value="C">‡∏ó‡∏µ‡∏° C</option>
              <option value="E">‡∏ó‡∏µ‡∏° E</option>
              <option value="F">‡∏ó‡∏µ‡∏° F</option>
              <option value="G">‡∏ó‡∏µ‡∏° G</option>
              <option value="H">‡∏ó‡∏µ‡∏° H</option>
              <option value="I">‡∏ó‡∏µ‡∏° I</option>
              <option value="J">‡∏ó‡∏µ‡∏° J</option>
            </select>
          </div>
        </div>
      `,
      showCancelButton: true,
      confirmButtonText: "‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥",
      cancelButtonText: "‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å",
      preConfirm: () => {
        const team = document.getElementById("teamSelect").value;
        if (!team) {
          Swal.showValidationMessage("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ó‡∏µ‡∏°‡∏Å‡πà‡∏≠‡∏ô‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥");
          return false;
        }
        return team;
      },
    }).then((result) => {
      if (result.isConfirmed) {
        const selectedTeam = result.value;
  
        // ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏õ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï backend

        // axios
        //   .put(`http://localhost:3001/users/approve/${user.member_id}`, {
        //     team: selectedTeam,
        //   })
        //   .then(() => {
        //     Swal.fire({
        //       icon: "success",
        //       title: "‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à",
        //       confirmButtonColor: "#2e7d32",
        //     });
        //     // ‡∏£‡∏µ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ ‡∏´‡∏£‡∏∑‡∏≠ fetch ‡πÉ‡∏´‡∏°‡πà
        //   })
        //   .catch((err) => {
        //     console.error(err);
        //     Swal.fire("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î", "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ", "error");
        //   });
      }
    });
  };

  return (
    <div className="d-flex flex-column flex-lg-row">
      <Navbar />
      <Container className="py-4" style={{ backgroundColor: "#F5F5F5", minHeight: "100vh", marginTop: "80px" }}>
        <Card className="p-4 w-100">
          <h4 className="text-center mb-4" style={{ color: "#2e7d32" }}>
            ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏≠‡∏ô‡∏°‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
          </h4>

          {/* üîç Search Bar ‡∏ä‡∏¥‡∏î‡∏ã‡πâ‡∏≤‡∏¢ */}
          <div className="d-flex justify-content-start mb-3">
            <input
              type="text"
              placeholder="üîç ‡∏ú‡∏π‡πâ‡∏™‡∏°‡∏±‡∏Ñ‡∏£ / ‡∏ó‡∏µ‡∏°"
              className="form-control"
              style={{ width: "350px" }}
              value={searchTerm}
              onChange={(e) => {
                setSearchTerm(e.target.value);
                setCurrentPage(1);
              }}
            />
          </div>

          <Table striped bordered hover responsive>
            <thead>
              <tr>
                <th>No</th>
                <th>‡∏ä‡∏∑‡πà‡∏≠ - ‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•</th>
                <th>‡∏≠‡∏µ‡πÄ‡∏°‡∏•</th>
                <th>‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£</th>
                <th>‡∏ß‡∏±‡∏ô/‡πÄ‡∏î‡∏∑‡∏≠‡∏ô/‡∏õ‡∏µ ‡πÄ‡∏Å‡∏¥‡∏î</th>
                <th>‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ö‡∏±‡∏ç‡∏ä‡∏µ</th>
                <th>‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞</th>
                <th>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏°‡∏±‡∏Ñ‡∏£</th>
                <th>‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£</th>
              </tr>
            </thead>
            <tbody>
              {paginatedList.map((item, index) => (
                <tr key={index}>
                  <td>{index+1}</td>
                  <td>{item.prefix} {item.full_name}</td>
                  <td>{item.email}</td>
                  <td>{item.phone_number}</td>
                  <td>{formatDDate(item.birthday)}</td>
                  <td>{item.username || "-"}</td>
                  <td>{item.role_id === 0 ? "‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥" : "‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡πÅ‡∏•‡πâ‡∏ß"}</td>
                  <td style={{ color: "#2e7d32"}}>{formatDDate(item.join_date)}</td>
                  <td>
                    {item.role_id === 0 && (
                        <Button
                          variant="success"
                          className="w-100 my-1"
                          onClick={() =>handleApprove(item)}
                        >
                          ‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥
                        </Button>
                    )}
                  </td>
                </tr>
              ))}
            </tbody>
          </Table>

          {/* üìÑ Pagination */}
          <nav className="d-flex justify-content-center mt-3">
            <ul className="pagination">
              <li className={`page-item ${currentPage === 1 ? "disabled" : ""}`}>
                <button className="page-link" onClick={() => setCurrentPage(currentPage - 1)} disabled={currentPage === 1}>
                  ¬´
                </button>
              </li>
              {Array.from({ length: totalPages }, (_, i) => (
                <li
                  key={i}
                  className={`page-item ${currentPage === i + 1 ? "active" : ""}`}
                >
                  <button className="page-link" onClick={() => setCurrentPage(i + 1)}>
                    {i + 1}
                  </button>
                </li>
              ))}
              <li className={`page-item ${currentPage === totalPages ? "disabled" : ""}`}>
                <button className="page-link" onClick={() => setCurrentPage(currentPage + 1)} disabled={currentPage === totalPages}>
                  ¬ª
                </button>
              </li>
            </ul>
          </nav>
        </Card>
      </Container>
    </div>
  );
}

export default CancelHistory;
